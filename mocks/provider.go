// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	gormprovider "example.com/the-boring-to-do-list-1/pkg/provider/gorm"
	mock "github.com/stretchr/testify/mock"
)

// Provider is an autogenerated mock type for the Provider type
type Provider struct {
	mock.Mock
}

// NewRepository provides a mock function with given fields: tableName
func (_m *Provider) NewRepository(tableName string) gormprovider.Repository {
	ret := _m.Called(tableName)

	var r0 gormprovider.Repository
	if rf, ok := ret.Get(0).(func(string) gormprovider.Repository); ok {
		r0 = rf(tableName)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(gormprovider.Repository)
		}
	}

	return r0
}

type mockConstructorTestingTNewProvider interface {
	mock.TestingT
	Cleanup(func())
}

// NewProvider creates a new instance of Provider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewProvider(t mockConstructorTestingTNewProvider) *Provider {
	mock := &Provider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
